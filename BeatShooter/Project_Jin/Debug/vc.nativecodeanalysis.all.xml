<?xml version="1.0" encoding="utf-8"?><DEFECTS><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\JungJin\Desktop\Programing Project\BeatShooter1107\Project_Jin\</FILEPATH>
      <FILENAME>Button.cpp</FILENAME>
      <LINE>7</LINE>
      <COLUMN>23</COLUMN>
    </SFA>
    <DEFECTCODE>26812</DEFECTCODE>
    <DESCRIPTION>열거형 형식 'Button::State'이(가) 범위가 지정되지 않았습니다. 'enum'(Enum.3) 대신 'enum class'를 사용하세요.</DESCRIPTION>
    <FUNCTION>Button::{ctor}</FUNCTION>
    <DECORATED>??0Button@@QAE@PAVTexture@@UD3DXVECTOR2@@1V?$function@$$A6AXXZ@std@@@Z</DECORATED>
    <FUNCLINE>5</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\JungJin\Desktop\Programing Project\BeatShooter1107\Project_Jin\</FILEPATH>
      <FILENAME>Device.cpp</FILENAME>
      <LINE>6</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>'Device::device' 변수가 초기화되지 않았습니다. 항상 멤버 변수를 초기화하세요(type.6).</DESCRIPTION>
    <FUNCTION>Device::{ctor}</FUNCTION>
    <DECORATED>??0Device@@AAE@XZ</DECORATED>
    <FUNCLINE>6</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Device::device</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\JungJin\Desktop\Programing Project\BeatShooter1107\Project_Jin\</FILEPATH>
      <FILENAME>Effect.cpp</FILENAME>
      <LINE>5</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>'Effect::aniNum' 변수가 초기화되지 않았습니다. 항상 멤버 변수를 초기화하세요(type.6).</DESCRIPTION>
    <FUNCTION>Effect::{ctor}</FUNCTION>
    <DECORATED>??0Effect@@QAE@PAVAnimator@@M@Z</DECORATED>
    <FUNCLINE>5</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Effect::aniNum</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\JungJin\Desktop\Programing Project\BeatShooter1107\Project_Jin\</FILEPATH>
      <FILENAME>EffectManager.cpp</FILENAME>
      <LINE>6</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>'EffectManager::shader' 변수가 초기화되지 않았습니다. 항상 멤버 변수를 초기화하세요(type.6).</DESCRIPTION>
    <FUNCTION>EffectManager::{ctor}</FUNCTION>
    <DECORATED>??0EffectManager@@AAE@XZ</DECORATED>
    <FUNCLINE>6</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>EffectManager::shader</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\JungJin\Desktop\Programing Project\BeatShooter1107\Project_Jin\</FILEPATH>
      <FILENAME>EffectManager.h</FILENAME>
      <LINE>11</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>'EffectManager::EffectMeta::animator' 변수가 초기화되지 않았습니다. 항상 멤버 변수를 초기화하세요(type.6).</DESCRIPTION>
    <FUNCTION>EffectManager::EffectMeta::{ctor}</FUNCTION>
    <DECORATED>??0EffectMeta@EffectManager@@QAE@XZ</DECORATED>
    <FUNCLINE>11</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>EffectManager::EffectMeta::animator</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\JungJin\Desktop\Programing Project\BeatShooter1107\Project_Jin\</FILEPATH>
      <FILENAME>EnemyManager.h</FILENAME>
      <LINE>18</LINE>
      <COLUMN>0</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>'EnemyPattern::mPatternType' 변수가 초기화되지 않았습니다. 항상 멤버 변수를 초기화하세요(type.6).</DESCRIPTION>
    <FUNCTION>EnemyPattern::{ctor}</FUNCTION>
    <DECORATED>??0EnemyPattern@@QAE@XZ</DECORATED>
    <FUNCLINE>18</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>EnemyPattern::mPatternType</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\JungJin\Desktop\Programing Project\BeatShooter1107\Project_Jin\</FILEPATH>
      <FILENAME>EnemyManager.h</FILENAME>
      <LINE>12</LINE>
      <COLUMN>0</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>'EnemySpawnInfo::spawnEnemyType' 변수가 초기화되지 않았습니다. 항상 멤버 변수를 초기화하세요(type.6).</DESCRIPTION>
    <FUNCTION>EnemySpawnInfo::{ctor}</FUNCTION>
    <DECORATED>??0EnemySpawnInfo@@QAE@XZ</DECORATED>
    <FUNCLINE>12</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>EnemySpawnInfo::spawnEnemyType</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\JungJin\Desktop\Programing Project\BeatShooter1107\Project_Jin\</FILEPATH>
      <FILENAME>InputManager.cpp</FILENAME>
      <LINE>25</LINE>
      <COLUMN>17</COLUMN>
    </SFA>
    <DEFECTCODE>6031</DEFECTCODE>
    <DESCRIPTION>반환 값이 무시되었습니다. 'GetKeyboardState'.</DESCRIPTION>
    <FUNCTION>InputManager::Update</FUNCTION>
    <DECORATED>?Update@InputManager@@QAEXXZ</DECORATED>
    <FUNCLINE>18</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\JungJin\Desktop\Programing Project\BeatShooter1107\Project_Jin\</FILEPATH>
      <FILENAME>InputManager.cpp</FILENAME>
      <LINE>25</LINE>
      <COLUMN>17</COLUMN>
    </SFA>
    <DEFECTCODE>6386</DEFECTCODE>
    <DESCRIPTION>'this-&gt;keyState'에 쓰는 동안 버퍼 오버런이 발생했습니다.  쓰기 가능한 크기는 '255'바이트인데 실제로는 '256'바이트만 쓸 수 있습니다.</DESCRIPTION>
    <FUNCTION>InputManager::Update</FUNCTION>
    <DECORATED>?Update@InputManager@@QAEXXZ</DECORATED>
    <FUNCLINE>18</FUNCLINE>
    <PROBABILITY>1</PROBABILITY>
    <RANK>4</RANK>
    <CATEGORY>
      <RULECATEGORY>mspft</RULECATEGORY>
    </CATEGORY>
    <PATH>
      <SFA>
        <FILEPATH>C:\Users\JungJin\Desktop\Programing Project\BeatShooter1107\Project_Jin\</FILEPATH>
        <FILENAME>InputManager.cpp</FILENAME>
        <LINE>20</LINE>
        <COLUMN>7</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\JungJin\Desktop\Programing Project\BeatShooter1107\Project_Jin\</FILEPATH>
        <FILENAME>InputManager.cpp</FILENAME>
        <LINE>22</LINE>
        <COLUMN>1</COLUMN>
        <KEYEVENT>
          <ID>1</ID>
          <KIND>선언</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>'keyState'은(는) 'memset'(c:\program files (x86)\microsoft visual studio\2019\community\vc\tools\msvc\14.23.28105\include\vcruntime_string.h:60에서 선언됨)의 출력입니다.</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\JungJin\Desktop\Programing Project\BeatShooter1107\Project_Jin\</FILEPATH>
        <FILENAME>InputManager.cpp</FILENAME>
        <LINE>23</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\JungJin\Desktop\Programing Project\BeatShooter1107\Project_Jin\</FILEPATH>
        <FILENAME>InputManager.cpp</FILENAME>
        <LINE>25</LINE>
        <COLUMN>17</COLUMN>
        <KEYEVENT>
          <ID>2</ID>
          <KIND>선언</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>'keyState'은(는) 'GetKeyboardState'(c:\program files (x86)\windows kits\10\include\10.0.18362.0\um\winuser.h:5903에서 선언됨)의 출력입니다.</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\JungJin\Desktop\Programing Project\BeatShooter1107\Project_Jin\</FILEPATH>
        <FILENAME>InputManager.cpp</FILENAME>
        <LINE>25</LINE>
        <COLUMN>17</COLUMN>
        <KEYEVENT>
          <ID>3</ID>
          <KIND>사용법</KIND>
          <IMPORTANCE>Essential</IMPORTANCE>
          <MESSAGE>'this-&gt;keyState[255]'에 쓰기가 잘못됨, (쓰기 가능한 범위는 0에서 254 사이임)</MESSAGE>
        </KEYEVENT>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\JungJin\Desktop\Programing Project\BeatShooter1107\Project_Jin\</FILEPATH>
      <FILENAME>Math.cpp</FILENAME>
      <LINE>8</LINE>
      <COLUMN>27</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>산술 오버플로: 4 바이트 값의 '+' 연산자를 사용한 다음 결과를 8 바이트 값에 캐스트합니다. 오버플로를 방지하려면 '+' 연산자를 호출하기 전에 더 광범위한 형식에 값을 캐스트합니다(io.2).</DESCRIPTION>
    <FUNCTION>Math::GetDistance</FUNCTION>
    <DECORATED>?GetDistance@Math@@SAMUD3DXVECTOR2@@0@Z</DECORATED>
    <FUNCLINE>5</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\JungJin\Desktop\Programing Project\BeatShooter1107\Project_Jin\</FILEPATH>
      <FILENAME>Math.cpp</FILENAME>
      <LINE>8</LINE>
      <COLUMN>19</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>산술 오버플로: 4 바이트 값의 '*' 연산자를 사용한 다음 결과를 8 바이트 값에 캐스트합니다. 오버플로를 방지하려면 '*' 연산자를 호출하기 전에 더 광범위한 형식에 값을 캐스트합니다(io.2).</DESCRIPTION>
    <FUNCTION>Math::GetDistance</FUNCTION>
    <DECORATED>?GetDistance@Math@@SAMUD3DXVECTOR2@@0@Z</DECORATED>
    <FUNCLINE>5</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\JungJin\Desktop\Programing Project\BeatShooter1107\Project_Jin\</FILEPATH>
      <FILENAME>RenderTarget.cpp</FILENAME>
      <LINE>24</LINE>
      <COLUMN>13</COLUMN>
    </SFA>
    <DEFECTCODE>26812</DEFECTCODE>
    <DESCRIPTION>열거형 형식 '_D3DFORMAT'이(가) 범위가 지정되지 않았습니다. 'enum'(Enum.3) 대신 'enum class'를 사용하세요.</DESCRIPTION>
    <FUNCTION>RenderTarget::{ctor}</FUNCTION>
    <DECORATED>??0RenderTarget@@QAE@II@Z</DECORATED>
    <FUNCLINE>4</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\JungJin\Desktop\Programing Project\BeatShooter1107\Project_Jin\</FILEPATH>
      <FILENAME>RenderTarget.cpp</FILENAME>
      <LINE>4</LINE>
      <COLUMN>14</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>'RenderTarget::renderSurface' 변수가 초기화되지 않았습니다. 항상 멤버 변수를 초기화하세요(type.6).</DESCRIPTION>
    <FUNCTION>RenderTarget::{ctor}</FUNCTION>
    <DECORATED>??0RenderTarget@@QAE@II@Z</DECORATED>
    <FUNCLINE>4</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>RenderTarget::renderSurface</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\JungJin\Desktop\Programing Project\BeatShooter1107\Project_Jin\inc\</FILEPATH>
      <FILENAME>fmod.hpp</FILENAME>
      <LINE>35</LINE>
      <COLUMN>233</COLUMN>
    </SFA>
    <DEFECTCODE>26812</DEFECTCODE>
    <DESCRIPTION>열거형 형식 'FMOD_RESULT'이(가) 범위가 지정되지 않았습니다. 'enum'(Enum.3) 대신 'enum class'를 사용하세요.</DESCRIPTION>
    <FUNCTION>FMOD::Memory_Initialize</FUNCTION>
    <DECORATED>?Memory_Initialize@FMOD@@YA?AW4FMOD_RESULT@@PAXHP6GPAXIIPBD@ZP6GPAX0II1@ZP6GX0I1@ZI@Z</DECORATED>
    <FUNCLINE>35</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\JungJin\Desktop\Programing Project\BeatShooter1107\Project_Jin\</FILEPATH>
      <FILENAME>Xml.h</FILENAME>
      <LINE>1318</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>26812</DEFECTCODE>
    <DESCRIPTION>열거형 형식 'Xml::XMLError'이(가) 범위가 지정되지 않았습니다. 'enum'(Enum.3) 대신 'enum class'를 사용하세요.</DESCRIPTION>
    <FUNCTION>Xml::XMLElement::QueryIntAttribute</FUNCTION>
    <DECORATED>?QueryIntAttribute@XMLElement@Xml@@QBE?AW4XMLError@2@PBDPAH@Z</DECORATED>
    <FUNCLINE>1313</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\JungJin\Desktop\Programing Project\BeatShooter1107\Project_Jin\</FILEPATH>
      <FILENAME>Xml.h</FILENAME>
      <LINE>1592</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>26812</DEFECTCODE>
    <DESCRIPTION>열거형 형식 'Xml::XMLElement::ElementClosingType'이(가) 범위가 지정되지 않았습니다. 'enum'(Enum.3) 대신 'enum class'를 사용하세요.</DESCRIPTION>
    <FUNCTION>Xml::XMLElement::ClosingType</FUNCTION>
    <DECORATED>?ClosingType@XMLElement@Xml@@QBE?AW4ElementClosingType@12@XZ</DECORATED>
    <FUNCLINE>1591</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\JungJin\Desktop\Programing Project\BeatShooter1107\Project_Jin\</FILEPATH>
      <FILENAME>Xml.h</FILENAME>
      <LINE>1711</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>26812</DEFECTCODE>
    <DESCRIPTION>열거형 형식 'Xml::Whitespace'이(가) 범위가 지정되지 않았습니다. 'enum'(Enum.3) 대신 'enum class'를 사용하세요.</DESCRIPTION>
    <FUNCTION>Xml::XMLDocument::WhitespaceMode</FUNCTION>
    <DECORATED>?WhitespaceMode@XMLDocument@Xml@@QBE?AW4Whitespace@2@XZ</DECORATED>
    <FUNCLINE>1710</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\JungJin\Desktop\Programing Project\BeatShooter1107\Project_Jin\</FILEPATH>
      <FILENAME>Texture.h</FILENAME>
      <LINE>26</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>'Texture::BoundVertex::color' 변수가 초기화되지 않았습니다. 항상 멤버 변수를 초기화하세요(type.6).</DESCRIPTION>
    <FUNCTION>Texture::BoundVertex::{ctor}</FUNCTION>
    <DECORATED>??0BoundVertex@Texture@@QAE@XZ</DECORATED>
    <FUNCLINE>26</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Texture::BoundVertex::color</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\JungJin\Desktop\Programing Project\BeatShooter1107\Project_Jin\</FILEPATH>
      <FILENAME>Texture.h</FILENAME>
      <LINE>103</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26812</DEFECTCODE>
    <DESCRIPTION>열거형 형식 'Pivot'이(가) 범위가 지정되지 않았습니다. 'enum'(Enum.3) 대신 'enum class'를 사용하세요.</DESCRIPTION>
    <FUNCTION>Texture::GetPivot</FUNCTION>
    <DECORATED>?GetPivot@Texture@@QAE?AW4Pivot@@XZ</DECORATED>
    <FUNCLINE>101</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\JungJin\Desktop\Programing Project\BeatShooter1107\Project_Jin\</FILEPATH>
      <FILENAME>Texture.cpp</FILENAME>
      <LINE>10</LINE>
      <COLUMN>9</COLUMN>
    </SFA>
    <DEFECTCODE>26812</DEFECTCODE>
    <DESCRIPTION>열거형 형식 'Pivot'이(가) 범위가 지정되지 않았습니다. 'enum'(Enum.3) 대신 'enum class'를 사용하세요.</DESCRIPTION>
    <FUNCTION>Texture::{ctor}</FUNCTION>
    <DECORATED>??0Texture@@AAE@PAUIDirect3DTexture9@@UD3DXVECTOR2@@1W4Pivot@@@Z</DECORATED>
    <FUNCLINE>10</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\JungJin\Desktop\Programing Project\BeatShooter1107\Project_Jin\</FILEPATH>
      <FILENAME>Texture.cpp</FILENAME>
      <LINE>10</LINE>
      <COLUMN>9</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>'Texture::number' 변수가 초기화되지 않았습니다. 항상 멤버 변수를 초기화하세요(type.6).</DESCRIPTION>
    <FUNCTION>Texture::{ctor}</FUNCTION>
    <DECORATED>??0Texture@@AAE@PAUIDirect3DTexture9@@UD3DXVECTOR2@@1W4Pivot@@@Z</DECORATED>
    <FUNCLINE>10</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Texture::number</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\JungJin\Desktop\Programing Project\BeatShooter1107\Project_Jin\</FILEPATH>
      <FILENAME>Texture.cpp</FILENAME>
      <LINE>32</LINE>
      <COLUMN>9</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>'Texture::number' 변수가 초기화되지 않았습니다. 항상 멤버 변수를 초기화하세요(type.6).</DESCRIPTION>
    <FUNCTION>Texture::{ctor}</FUNCTION>
    <DECORATED>??0Texture@@AAE@PAUIDirect3DTexture9@@UD3DXVECTOR2@@11@Z</DECORATED>
    <FUNCLINE>32</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Texture::number</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\JungJin\Desktop\Programing Project\BeatShooter1107\Project_Jin\</FILEPATH>
      <FILENAME>TimeManager.cpp</FILENAME>
      <LINE>5</LINE>
      <COLUMN>13</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>'TimeManager::curTime' 변수가 초기화되지 않았습니다. 항상 멤버 변수를 초기화하세요(type.6).</DESCRIPTION>
    <FUNCTION>TimeManager::{ctor}</FUNCTION>
    <DECORATED>??0TimeManager@@AAE@XZ</DECORATED>
    <FUNCLINE>5</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>TimeManager::curTime</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\JungJin\Desktop\Programing Project\BeatShooter1107\Project_Jin\</FILEPATH>
      <FILENAME>TweakBar.cpp</FILENAME>
      <LINE>43</LINE>
      <COLUMN>10</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>'TweakBar::isDraw' 변수가 초기화되지 않았습니다. 항상 멤버 변수를 초기화하세요(type.6).</DESCRIPTION>
    <FUNCTION>TweakBar::{ctor}</FUNCTION>
    <DECORATED>??0TweakBar@@AAE@XZ</DECORATED>
    <FUNCLINE>43</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>TweakBar::isDraw</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\JungJin\Desktop\Programing Project\BeatShooter1107\Project_Jin\</FILEPATH>
      <FILENAME>Utility.cpp</FILENAME>
      <LINE>31</LINE>
      <COLUMN>42</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>산술 오버플로: 4 바이트 값의 '+' 연산자를 사용한 다음 결과를 8 바이트 값에 캐스트합니다. 오버플로를 방지하려면 '+' 연산자를 호출하기 전에 더 광범위한 형식에 값을 캐스트합니다(io.2).</DESCRIPTION>
    <FUNCTION>Utility::Vector2Length</FUNCTION>
    <DECORATED>?Vector2Length@Utility@@YAMABUD3DXVECTOR2@@@Z</DECORATED>
    <FUNCLINE>29</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\JungJin\Desktop\Programing Project\BeatShooter1107\Project_Jin\</FILEPATH>
      <FILENAME>Utility.cpp</FILENAME>
      <LINE>31</LINE>
      <COLUMN>30</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>산술 오버플로: 4 바이트 값의 '*' 연산자를 사용한 다음 결과를 8 바이트 값에 캐스트합니다. 오버플로를 방지하려면 '*' 연산자를 호출하기 전에 더 광범위한 형식에 값을 캐스트합니다(io.2).</DESCRIPTION>
    <FUNCTION>Utility::Vector2Length</FUNCTION>
    <DECORATED>?Vector2Length@Utility@@YAMABUD3DXVECTOR2@@@Z</DECORATED>
    <FUNCLINE>29</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\JungJin\Desktop\Programing Project\BeatShooter1107\Project_Jin\</FILEPATH>
      <FILENAME>Utility.cpp</FILENAME>
      <LINE>36</LINE>
      <COLUMN>65</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>산술 오버플로: 4 바이트 값의 '+' 연산자를 사용한 다음 결과를 8 바이트 값에 캐스트합니다. 오버플로를 방지하려면 '+' 연산자를 호출하기 전에 더 광범위한 형식에 값을 캐스트합니다(io.2).</DESCRIPTION>
    <FUNCTION>Utility::Vector3Length</FUNCTION>
    <DECORATED>?Vector3Length@Utility@@YAMABUD3DXVECTOR3@@@Z</DECORATED>
    <FUNCLINE>34</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\JungJin\Desktop\Programing Project\BeatShooter1107\Project_Jin\</FILEPATH>
      <FILENAME>Utility.cpp</FILENAME>
      <LINE>36</LINE>
      <COLUMN>42</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>산술 오버플로: 4 바이트 값의 '+' 연산자를 사용한 다음 결과를 8 바이트 값에 캐스트합니다. 오버플로를 방지하려면 '+' 연산자를 호출하기 전에 더 광범위한 형식에 값을 캐스트합니다(io.2).</DESCRIPTION>
    <FUNCTION>Utility::Vector3Length</FUNCTION>
    <DECORATED>?Vector3Length@Utility@@YAMABUD3DXVECTOR3@@@Z</DECORATED>
    <FUNCLINE>34</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\JungJin\Desktop\Programing Project\BeatShooter1107\Project_Jin\</FILEPATH>
      <FILENAME>Utility.cpp</FILENAME>
      <LINE>36</LINE>
      <COLUMN>30</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>산술 오버플로: 4 바이트 값의 '*' 연산자를 사용한 다음 결과를 8 바이트 값에 캐스트합니다. 오버플로를 방지하려면 '*' 연산자를 호출하기 전에 더 광범위한 형식에 값을 캐스트합니다(io.2).</DESCRIPTION>
    <FUNCTION>Utility::Vector3Length</FUNCTION>
    <DECORATED>?Vector3Length@Utility@@YAMABUD3DXVECTOR3@@@Z</DECORATED>
    <FUNCLINE>34</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\JungJin\Desktop\Programing Project\BeatShooter1107\Project_Jin\</FILEPATH>
      <FILENAME>Xml.cpp</FILENAME>
      <LINE>1144</LINE>
      <COLUMN>41</COLUMN>
    </SFA>
    <DEFECTCODE>26812</DEFECTCODE>
    <DESCRIPTION>열거형 형식 'Xml::StrPair::&lt;unnamed-enum-NEEDS_ENTITY_PROCESSING&gt;'이(가) 범위가 지정되지 않았습니다. 'enum'(Enum.3) 대신 'enum class'를 사용하세요.</DESCRIPTION>
    <FUNCTION>Xml::XMLText::ParseDeep</FUNCTION>
    <DECORATED>?ParseDeep@XMLText@Xml@@MAEPADPADPAVStrPair@2@PAH@Z</DECORATED>
    <FUNCLINE>1134</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\JungJin\Desktop\Programing Project\BeatShooter1107\Project_Jin\</FILEPATH>
      <FILENAME>Xml.cpp</FILENAME>
      <LINE>1380</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>26812</DEFECTCODE>
    <DESCRIPTION>열거형 형식 'Xml::XMLError'이(가) 범위가 지정되지 않았습니다. 'enum'(Enum.3) 대신 'enum class'를 사용하세요.</DESCRIPTION>
    <FUNCTION>Xml::XMLAttribute::QueryIntValue</FUNCTION>
    <DECORATED>?QueryIntValue@XMLAttribute@Xml@@QBE?AW4XMLError@2@PAH@Z</DECORATED>
    <FUNCLINE>1377</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\JungJin\Desktop\Programing Project\BeatShooter1107\Project_Jin\</FILEPATH>
      <FILENAME>Xml.cpp</FILENAME>
      <LINE>1486</LINE>
      <COLUMN>14</COLUMN>
    </SFA>
    <DEFECTCODE>26812</DEFECTCODE>
    <DESCRIPTION>열거형 형식 'Xml::XMLElement::ElementClosingType'이(가) 범위가 지정되지 않았습니다. 'enum'(Enum.3) 대신 'enum class'를 사용하세요.</DESCRIPTION>
    <FUNCTION>Xml::XMLElement::{ctor}</FUNCTION>
    <DECORATED>??0XMLElement@Xml@@AAE@PAVXMLDocument@1@@Z</DECORATED>
    <FUNCLINE>1485</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\JungJin\Desktop\Programing Project\BeatShooter1107\Project_Jin\</FILEPATH>
      <FILENAME>Xml.cpp</FILENAME>
      <LINE>1994</LINE>
      <COLUMN>14</COLUMN>
    </SFA>
    <DEFECTCODE>26812</DEFECTCODE>
    <DESCRIPTION>열거형 형식 'Xml::Whitespace'이(가) 범위가 지정되지 않았습니다. 'enum'(Enum.3) 대신 'enum class'를 사용하세요.</DESCRIPTION>
    <FUNCTION>Xml::XMLDocument::{ctor}</FUNCTION>
    <DECORATED>??0XMLDocument@Xml@@QAE@_NW4Whitespace@1@@Z</DECORATED>
    <FUNCLINE>1994</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\JungJin\Desktop\Programing Project\BeatShooter1107\Project_Jin\</FILEPATH>
      <FILENAME>Xml.cpp</FILENAME>
      <LINE>2366</LINE>
      <COLUMN>13</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>'Xml::XMLPrinter::_entityFlag' 변수가 초기화되지 않았습니다. 항상 멤버 변수를 초기화하세요(type.6).</DESCRIPTION>
    <FUNCTION>Xml::XMLPrinter::{ctor}</FUNCTION>
    <DECORATED>??0XMLPrinter@Xml@@QAE@PAU_iobuf@@_NH@Z</DECORATED>
    <FUNCLINE>2366</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Xml::XMLPrinter::_entityFlag</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT></DEFECTS>