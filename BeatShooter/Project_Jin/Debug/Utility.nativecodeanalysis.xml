<?xml version="1.0" encoding="UTF-8"?>
<DEFECTS>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\JungJin\Desktop\Programing Project\BeatShooter1107\Project_Jin\</FILEPATH>
      <FILENAME>Utility.cpp</FILENAME>
      <LINE>31</LINE>
      <COLUMN>42</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>산술 오버플로: 4 바이트 값의 '+' 연산자를 사용한 다음 결과를 8 바이트 값에 캐스트합니다. 오버플로를 방지하려면 '+' 연산자를 호출하기 전에 더 광범위한 형식에 값을 캐스트합니다(io.2).</DESCRIPTION>
    <FUNCTION>Utility::Vector2Length</FUNCTION>
    <DECORATED>?Vector2Length@Utility@@YAMABUD3DXVECTOR2@@@Z</DECORATED>
    <FUNCLINE>29</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\JungJin\Desktop\Programing Project\BeatShooter1107\Project_Jin\</FILEPATH>
      <FILENAME>Utility.cpp</FILENAME>
      <LINE>31</LINE>
      <COLUMN>30</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>산술 오버플로: 4 바이트 값의 '*' 연산자를 사용한 다음 결과를 8 바이트 값에 캐스트합니다. 오버플로를 방지하려면 '*' 연산자를 호출하기 전에 더 광범위한 형식에 값을 캐스트합니다(io.2).</DESCRIPTION>
    <FUNCTION>Utility::Vector2Length</FUNCTION>
    <DECORATED>?Vector2Length@Utility@@YAMABUD3DXVECTOR2@@@Z</DECORATED>
    <FUNCLINE>29</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\JungJin\Desktop\Programing Project\BeatShooter1107\Project_Jin\</FILEPATH>
      <FILENAME>Utility.cpp</FILENAME>
      <LINE>36</LINE>
      <COLUMN>65</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>산술 오버플로: 4 바이트 값의 '+' 연산자를 사용한 다음 결과를 8 바이트 값에 캐스트합니다. 오버플로를 방지하려면 '+' 연산자를 호출하기 전에 더 광범위한 형식에 값을 캐스트합니다(io.2).</DESCRIPTION>
    <FUNCTION>Utility::Vector3Length</FUNCTION>
    <DECORATED>?Vector3Length@Utility@@YAMABUD3DXVECTOR3@@@Z</DECORATED>
    <FUNCLINE>34</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\JungJin\Desktop\Programing Project\BeatShooter1107\Project_Jin\</FILEPATH>
      <FILENAME>Utility.cpp</FILENAME>
      <LINE>36</LINE>
      <COLUMN>42</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>산술 오버플로: 4 바이트 값의 '+' 연산자를 사용한 다음 결과를 8 바이트 값에 캐스트합니다. 오버플로를 방지하려면 '+' 연산자를 호출하기 전에 더 광범위한 형식에 값을 캐스트합니다(io.2).</DESCRIPTION>
    <FUNCTION>Utility::Vector3Length</FUNCTION>
    <DECORATED>?Vector3Length@Utility@@YAMABUD3DXVECTOR3@@@Z</DECORATED>
    <FUNCLINE>34</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\JungJin\Desktop\Programing Project\BeatShooter1107\Project_Jin\</FILEPATH>
      <FILENAME>Utility.cpp</FILENAME>
      <LINE>36</LINE>
      <COLUMN>30</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>산술 오버플로: 4 바이트 값의 '*' 연산자를 사용한 다음 결과를 8 바이트 값에 캐스트합니다. 오버플로를 방지하려면 '*' 연산자를 호출하기 전에 더 광범위한 형식에 값을 캐스트합니다(io.2).</DESCRIPTION>
    <FUNCTION>Utility::Vector3Length</FUNCTION>
    <DECORATED>?Vector3Length@Utility@@YAMABUD3DXVECTOR3@@@Z</DECORATED>
    <FUNCLINE>34</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
</DEFECTS>